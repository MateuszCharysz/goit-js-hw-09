{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAKA,MAAMC,EAAMC,QAAQC,IAGdC,EAAOC,SAASC,cAAc,UAElCC,UAAUC,MAAEC,EAAKC,KAAEC,EAAIC,OAAEC,IACvBT,EAGEU,EAAgB,CAACC,EAAOC,EAAMC,KAalC,IAAIC,EAAM,IAAIC,MAAMF,IACpBhB,EAAIiB,GAEJA,EAAIE,SAAQ,CAACC,EAASC,KACpB,IAAIC,EAAkBR,EAAQC,EAAOM,EACjCE,EAAYC,SAASH,GAAS,EAClCI,YAAW,KAlBS,EAACC,EAAQC,KAC7B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KACvBL,EACFI,EAAQ,CAAEE,SAAU,GAAGR,IAAUS,KAAM,GAAGR,MAE1CM,EAAO,CAAEG,cAAe,GAAGV,IAAUS,KAAM,GAAGR,KAAgB,GAGhE,EAUAU,CAAcd,EAAWD,GACtBgB,MAAKC,GACJC,EAAA1C,GAAS2C,OAAOC,QACd,uBAAqBH,EAAIL,eAAmBK,EAAEJ,YAC7CQ,OAECC,GACJJ,EAAA1C,GAAQ2C,OAACI,QAAO,sBACbD,EAAqBE,oBAAoBF,EAAMrC,YAAY,GAGjEe,EAAgB,GACnB,EAKJnB,EAAK4C,iBAAiB,UAAUC,IAC9BA,EAAMC,iBACNpC,EAAcL,EAAM0C,cAAexC,EAAKwC,cAAetC,EAAOsC,cAAc","sources":["src/js/03-promises.js"],"sourcesContent":["'use strict';\nimport Notiflix from 'notiflix';\nimport 'notiflix/dist/notiflix-3.2.6.min.css';\n\n//help\nconst log = console.log;\n\n//DOM\nconst form = document.querySelector('.form');\nconst {\n  elements: { delay, step, amount },\n} = form;\n//CALLBACK/FUNCTIONS\n\nconst promiseLoader = (delay, step, amount) => {\n  const createPromise = (callId, timeOfLunch) => {\n    const shouldResolve = Math.random() > 0.3;\n    return new Promise((resolve, reject) => {\n      if (shouldResolve) {\n        resolve({ position: `${callId}`, time: `${timeOfLunch}` });\n      } else {\n        reject({ errorPosition: `${callId}`, time: `${timeOfLunch}` });\n      }\n\n    });\n  };\n\n  let arr = [...Array(amount)];\n  log(arr);\n\n  arr.forEach((element, index) => {\n    let timeOfLunchMath = delay + step * index;\n    let promiseId = parseInt(index) + 1;\n    setTimeout(() => {\n      createPromise(promiseId, timeOfLunchMath)\n        .then(value =>\n          Notiflix.Notify.success(\n            `✅ Fulfilled promise ${value.position} in ${value.time}ms`,\n          ),\n        )\n        .catch(error =>\n          Notiflix.Notify.failure(\n            `❌ Rejected promise ${error.errorposition} in ${error.delay}ms`,\n          ),\n        );\n    }, timeOfLunchMath);\n  });\n};\n\n\n//EVENTS\nform.addEventListener('submit', event => {\n  event.preventDefault();\n  promiseLoader(delay.valueAsNumber, step.valueAsNumber, amount.valueAsNumber);\n});\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$log","console","log","$47d4ff9957288465$var$form","document","querySelector","elements","delay","$47d4ff9957288465$var$delay","step","$47d4ff9957288465$var$step","amount","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$promiseLoader","delay1","step1","amount1","arr","Array","forEach","element","index","timeOfLunchMath","promiseId","parseInt","setTimeout","callId","timeOfLunch","shouldResolve","Math","random","Promise","resolve","reject","position","time","errorPosition","createPromise","then","value","$parcel$interopDefault","Notify","success","catch","error","failure","errorposition","addEventListener","event","preventDefault","valueAsNumber"],"version":3,"file":"03-promises.a84ef3e5.js.map"}