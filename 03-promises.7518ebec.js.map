{"mappings":"oeAAAA,EAAA,SAKA,MAAMC,EAAMC,QAAQC,IAOdC,EAAOC,SAASC,cAAc,UAElCC,UAAUC,MAAEC,EAAKC,KAAEC,EAAIC,OAAEC,IACvBT,EACJH,EAAIQ,GACJR,EAAIU,GACJV,EAAIY,GAgCJT,EAAKU,iBAAiB,UAAUC,IAC9BA,EAAMC,iBA9Bc,EAACC,EAAOC,EAAMC,KAClC,MAWMC,EAAaC,YAXG,EAACC,EAAUC,KAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,IAAIC,SAAQ,CAACC,EAASC,KAChBL,EACFI,EAAQ,CAAEN,SAAU,GAAGA,IAAYQ,KAAM,GAAGP,MAE5CM,EAAO,CAAEP,SAAU,GAAGA,IAAYQ,KAAM,GAAGP,KAAgB,IAG3DJ,IAASG,GAAUS,cAAcX,EAAW,EAEnBY,GAAiBd,GAChDe,WAAWb,EAAYH,EAAM,EAoB7BiB,CAAczB,EAAM0B,cAAexB,EAAKwB,cAAetB,EAAOsB,cAAc","sources":["src/js/03-promises.js"],"sourcesContent":["'use strict';\nimport Notiflix from 'notiflix';\nimport 'notiflix/dist/notiflix-3.2.6.min.css';\n\n//help\nconst log = console.log;\n\n//DOM\n// const delay = document.querySelector('[name=\"delay\"]')\n// log(delay)\n// const step = document.querySelector('[name=\"step\"]');\n// const amount = document.querySelector('[name=\"amount\"]');\nconst form = document.querySelector('.form');\nconst {\n  elements: { delay, step, amount },\n} = form;\nlog(delay);\nlog(step);\nlog(amount);\n//CALLBACK/FUNCTIONS\n\nconst promiseLoader = (delay, step, amount) => {\n  const createPromise = (position, timeOfLunch) => {\n    const shouldResolve = Math.random() > 0.3;\n    new Promise((resolve, reject) => {\n      if (shouldResolve) {\n        resolve({ position: `${position}`, time: `${timeOfLunch}` }); // Fulfill\n      } else {\n        reject({ position: `${position}`, time: `${timeOfLunch}` }); // Reject\n      }\n    })\n    if (amount===position) clearInterval(intervalId);\n  };\n  const intervalId = setInterval(createPromise(), step);\n  setTimeout(intervalId, delay)\n\n\n\n  \n  // .then(() =>\n  //   Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`),\n  // )\n  // .catch(() =>\n  //   Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`),\n  // );\n};\n// Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n// Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n\n//EVENTS\nform.addEventListener('submit', event => {\n  event.preventDefault();\n  // log(delay.value, step.value, amount.value) // it works\n  // log(typeof delay.value); valueAsNumber\n  promiseLoader(delay.valueAsNumber, step.valueAsNumber, amount.valueAsNumber);\n});\n"],"names":["parcelRequire","$47d4ff9957288465$var$log","console","log","$47d4ff9957288465$var$form","document","querySelector","elements","delay","$47d4ff9957288465$var$delay","step","$47d4ff9957288465$var$step","amount","$47d4ff9957288465$var$amount","addEventListener","event","preventDefault","delay1","step1","amount1","intervalId","setInterval","position","timeOfLunch","shouldResolve","Math","random","Promise","resolve","reject","time","clearInterval","createPromise","setTimeout","$47d4ff9957288465$var$promiseLoader","valueAsNumber"],"version":3,"file":"03-promises.7518ebec.js.map"}